

/* core layout elements - headers, footers, page content, fancy blocks layout, etc. */

/* header and footer base styles */
footer, header {
  box-shadow: 0 0 10px $shadow-color;
  width: 100%;
  text-align: center;
  background-color: $color-a5;
  color: $color-a1;
}

/* footer specific */
footer {
  padding-top: 20px;
  padding-bottom: 20px;
}


/* page content layout */

.page-content {
  font-size: 1.2rem;
  max-width: 100%;
  width: 100%;
  flex: 2;
  -webkit-flex: 2; /* Safari 6.1+ */
  -ms-flex: 2; /* IE 10 */
  padding-top: 10px;
}

/* allow for full-width elements as well as well as standard */
//TODO: tidy this
.page-content > * {
  max-width: 100%;
  margin: 0 auto;
  padding: 10px;
}

.page-content > .wide {
  max-width: 100%;
  margin: 0 auto;
}


/* blocks layout design (used on accessibility page)
 * partly generated using an online tool found at http://the-echoplex.net/flexyboxes/
 */

.block-box {
  width: 100%;
  display: block; // only display flex if large screen (mobile first)
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

/* The W3C CSS validator, when run on the section below, gives the following error: 'auto is not a flex-flow value : 0 1 auto'.
 * This can be safely ignored, as setting `flex: 0 1 auto;` is perfectly fine according to W3C itself: https://www.w3.org/TR/css-flexbox-1/#propdef-flex
 * Must be a bug in the validator.
 */
.block {
  -webkit-order: 0;
  -ms-flex-order: 0;
  order: 0;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  color: $base-font-color;
  background-color: $color-a4;
  width: 100%;
  // display: block;
  //clear: both;
  margin: 10px auto;
  padding: 10px;
}

.block:target {
  @extend .highlight;

  .top-link {
    display: block;
  }
}
